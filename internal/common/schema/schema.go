// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package schema

import (
	"encoding/json"
	"time"

	"github.com/deepmap/oapi-codegen/pkg/runtime"
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

// Defines values for CancelResponseStatus.
const (
	FAILED CancelResponseStatus = "FAILED"
	OK     CancelResponseStatus = "OK"
)

// Defines values for RequiredPlatformInPath.
const (
	RequiredPlatformInPathFoco  RequiredPlatformInPath = "foco"
	RequiredPlatformInPathHertz RequiredPlatformInPath = "hertz"
)

// Defines values for CancelBookingParamsPlatform.
const (
	CancelBookingParamsPlatformFoco  CancelBookingParamsPlatform = "foco"
	CancelBookingParamsPlatformHertz CancelBookingParamsPlatform = "hertz"
)

// CancelRequestParams defines model for CancelRequestParams.
type CancelRequestParams struct {
	BookingDateTime *time.Time `json:"bookingDateTime,omitempty"`

	// BrokerReference Car Rental Gateway booking/broker reference
	BrokerReference string `json:"brokerReference"`

	// CancelReason Cancel reason (value in range 2 to 15)
	CancelReason  *int                              `json:"cancelReason,omitempty"`
	Configuration CancelRequestParams_Configuration `json:"configuration"`

	// Contact Contact info
	Contact Contact `json:"contact"`

	// ModuleId Module ID
	ModuleId int           `json:"moduleId"`
	PickUp   RequestBranch `json:"pickUp"`

	// ReservNumber Car Rental Gateway booking reservation number
	ReservNumber string `json:"reservNumber"`

	// SupplierBookingReference Supplier booking reference
	SupplierBookingReference string   `json:"supplierBookingReference"`
	Timeouts                 Timeouts `json:"timeouts"`
}

// CancelRequestParams_Configuration defines model for CancelRequestParams.Configuration.
type CancelRequestParams_Configuration struct {
	union json.RawMessage
}

// CancelResponse defines model for CancelResponse.
type CancelResponse struct {
	// Errors List supplier errors
	Errors *SupplierResponseErrors `json:"errors,omitempty"`

	// Status Was the cancellation successful.
	Status *CancelResponseStatus `json:"status,omitempty"`

	// SupplierRequests Requests made to and responses received from supplier system
	SupplierRequests *SupplierRequests `json:"supplierRequests,omitempty"`

	// Warnings List supplier warnings
	Warnings *SupplierResponseWarnings `json:"warnings,omitempty"`
}

// CancelResponseStatus Was the cancellation successful.
type CancelResponseStatus string

// Contact Contact info
type Contact struct {
	// Email E-mail
	Email openapi_types.Email `json:"email"`
}

// FocoConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type FocoConfiguration struct {
	// SupplierApiUrl Supplier api url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// UsertToken User token
	UsertToken string `json:"usertToken"`
}

// HertzConfiguration Supplier specific parameters for all post-type requests except booking. Override in supplier module for all post-routes except booking
type HertzConfiguration struct {
	// FrequentTravellerProgramId For FTN identifies the company associated with the FTN/MembershipId
	FrequentTravellerProgramId *string `json:"FrequentTravellerProgramId,omitempty"`

	// FrequentTravellerTravelSector For FTN identifies FTN/MemmbershipID number. Allowed Values: 1 - FTN is Airline Frequent Flyer #, 2- #1 Club Number, 3 - Hotel Frequent Traveller #
	FrequentTravellerTravelSector *string `json:"FrequentTravellerTravelSector,omitempty"`
	Booking                       *struct {
		BookingDateTime time.Time `json:"bookingDateTime"`

		// SupplierBookingReference Supplier booking reference
		SupplierBookingReference string `json:"supplierBookingReference"`
	} `json:"booking,omitempty"`

	// BookingAgent Booking agent
	BookingAgent *string `json:"bookingAgent,omitempty"`

	// CacheDebuglog Send detailed requests logging info for debugging
	CacheDebuglog *string `json:"cacheDebuglog,omitempty"`

	// ClubNumber Club Number
	ClubNumber *string `json:"clubNumber,omitempty"`

	// CorpDiscountNmbr Corporate Discount Number
	CorpDiscountNmbr *string `json:"corpDiscountNmbr,omitempty"`

	// Cp Consumer Product Code
	Cp *string `json:"cp,omitempty"`

	// FeePayableLocally Fees that are considered allways payable locally in certain countries. Example: { "AIRPORT CONCESSION RECOVERY": ["SE", "SA"] }
	FeePayableLocally *map[string]interface{} `json:"feePayableLocally,omitempty"`

	// FpPayFeesLocally It is used with full-prepay deals, to determine are the fees payable locally (true) or pay now (false). Default is false
	FpPayFeesLocally *bool `json:"fpPayFeesLocally,omitempty"`

	// FrequentTravellerNumber frequent traveller number
	FrequentTravellerNumber *string `json:"frequentTravellerNumber,omitempty"`

	// LastName Customer last name who is the owner of the booking
	LastName *string `json:"lastName,omitempty"`

	// MaxResponses Max number of responses expected from Hertz. Default is 10
	MaxResponses *string `json:"maxResponses,omitempty"`

	// PayNowCoverages Supplier code(s) of coverage(s) that are not included in rate and are have to be set pay now (made for ITSC). Example: ["7","48"]
	PayNowCoverages *[]string `json:"payNowCoverages,omitempty"`

	// PromotionCode Promotion Code
	PromotionCode *string `json:"promotionCode,omitempty"`

	// ProxyjsHops Intermediate ProxyJS servers
	ProxyjsHops *string `json:"proxyjsHops,omitempty"`

	// RateQualifier Rate Qualifier
	RateQualifier *string `json:"rateQualifier,omitempty"`

	// ResidenceCountry Customer country of residence
	ResidenceCountry *string `json:"residenceCountry,omitempty"`

	// ResidenceCountryMapping Residence country mapping. Residence of the customer in request in mapped to the country as in property value. Example: {"AT":"DE","IE":"BE","SE":"DK"}
	ResidenceCountryMapping *map[string]interface{} `json:"residenceCountryMapping,omitempty"`

	// SendAgencyBillingNumberWithBooking If this value is set to true in contract, billing number is sent with booking request to supplier
	SendAgencyBillingNumberWithBooking *bool `json:"sendAgencyBillingNumberWithBooking,omitempty"`

	// SendVoucher Send or not Voucher element
	SendVoucher *bool `json:"sendVoucher,omitempty"`

	// SupplierApiUrl Supplier api url
	SupplierApiUrl string `json:"supplierApiUrl"`

	// SupplierPromotionalDiscount Supplier discount percentages for estimated car price without applied supplier discount. [corp_discount_nmbr]_[promotion_code]:discount percentage> - example:{"154080_169680":25}
	SupplierPromotionalDiscount *map[string]interface{} `json:"supplierPromotionalDiscount,omitempty"`

	// Taco Travel Agency Commission Number
	Taco *string `json:"taco,omitempty"`

	// TaxExclCoverageCountries Tax exclusive coverage countries. Example: ["AA", "BB"]
	TaxExclCoverageCountries *[]string `json:"taxExclCoverageCountries,omitempty"`

	// TaxExclFees Fees that are tax exclusive in certain countries. Example: { "AIRPORT CONCESSION RECOVERY": ["SE", "SA"] }
	TaxExclFees *string `json:"taxExclFees,omitempty"`

	// Tour IT/Tour Number
	Tour *string `json:"tour,omitempty"`

	// TravelPurpose Travel Purpose
	TravelPurpose *string `json:"travelPurpose,omitempty"`

	// UseDirectSell If true, Direct Sell type booking and modify is used. If false or not present - Reference Sell is used
	UseDirectSell *bool `json:"useDirectSell,omitempty"`

	// Vc Validation Code assigned by Hertz
	Vc *string `json:"vc,omitempty"`

	// VehicleWhereAtMapping Vehicle where at mapping
	VehicleWhereAtMapping *map[string]interface{} `json:"vehicleWhereAtMapping,omitempty"`

	// VendorCode Vendor code like ZE, FF, ZR or ZT
	VendorCode string `json:"vendorCode"`

	// VendorCodeImport Mapping vendor code like ZE, FF, ZR or ZT
	VendorCodeImport *string `json:"vendorCodeImport,omitempty"`

	// Vn Vendor Number
	Vn *string `json:"vn,omitempty"`

	// VoucherContractBillingType If value is Partial, EstimatedTotalAmount from rates request is added to the booking request.
	VoucherContractBillingType *string `json:"voucherContractBillingType,omitempty"`
}

// RequestBranch defines model for RequestBranch.
type RequestBranch struct {
	// Code Branch code
	Code string `json:"code"`

	// Country Country ISO code of branch
	Country  string    `json:"country"`
	DateTime time.Time `json:"dateTime"`
}

// RequestContent defines model for RequestContent.
type RequestContent struct {
	// Body Request body
	Body *string `json:"body,omitempty"`

	// Headers Request headers
	Headers *map[string]interface{} `json:"headers,omitempty"`

	// Method Request method
	Method *string `json:"method,omitempty"`

	// Url Targeted url
	Url *string `json:"url,omitempty"`
}

// ResponseContent defines model for ResponseContent.
type ResponseContent struct {
	// Body Response body
	Body *string `json:"body,omitempty"`

	// Headers Response headers
	Headers *map[string]interface{} `json:"headers,omitempty"`

	// StatusCode Response status
	StatusCode *int `json:"statusCode,omitempty"`
}

// SupplierRequest defines model for SupplierRequest.
type SupplierRequest struct {
	// Duration Duration
	Duration *int `json:"duration,omitempty"`

	// Name Request name (e.g. rates, location, booking, etc)
	Name            *string          `json:"name,omitempty"`
	RequestContent  *RequestContent  `json:"requestContent,omitempty"`
	ResponseContent *ResponseContent `json:"responseContent,omitempty"`

	// StartDateTime Datetime when the request was submitted
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
}

// SupplierRequests Requests made to and responses received from supplier system
type SupplierRequests = []SupplierRequest

// SupplierResponseError defines model for SupplierResponseError.
type SupplierResponseError struct {
	// Code Supplier code
	Code *string `json:"code,omitempty"`

	// Details Details
	Details *string `json:"details,omitempty"`

	// Message Message
	Message string `json:"message"`
}

// SupplierResponseErrors List supplier errors
type SupplierResponseErrors = []SupplierResponseError

// SupplierResponseWarnings List supplier warnings
type SupplierResponseWarnings = []SupplierResponseError

// Timeouts defines model for Timeouts.
type Timeouts struct {
	// Booking Maximum time in milliseconds booking request is expected to return answer
	Booking *int `json:"booking,omitempty"`

	// Cancel Maximum time in milliseconds cancel request is expected to return answer
	Cancel *int `json:"cancel,omitempty"`

	// Default Default value for maximum time in milliseconds when request is expected to return answer
	Default int `json:"default"`

	// Extras Maximum time in milliseconds extras request is expected to return answer
	Extras *int `json:"extras,omitempty"`

	// Locations Maximum time in milliseconds locations request is expected to return answer
	Locations *int `json:"locations,omitempty"`

	// Rates Maximum time in milliseconds rates request is expected to return answer
	Rates *int `json:"rates,omitempty"`
}

// RequiredPlatformInPath defines model for requiredPlatformInPath.
type RequiredPlatformInPath string

// CancelBookingParamsPlatform defines parameters for CancelBooking.
type CancelBookingParamsPlatform string

// CancelBookingJSONRequestBody defines body for CancelBooking for application/json ContentType.
type CancelBookingJSONRequestBody = CancelRequestParams

// AsHertzConfiguration returns the union data inside the CancelRequestParams_Configuration as a HertzConfiguration
func (t CancelRequestParams_Configuration) AsHertzConfiguration() (HertzConfiguration, error) {
	var body HertzConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHertzConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided HertzConfiguration
func (t *CancelRequestParams_Configuration) FromHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHertzConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided HertzConfiguration
func (t *CancelRequestParams_Configuration) MergeHertzConfiguration(v HertzConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

// AsFocoConfiguration returns the union data inside the CancelRequestParams_Configuration as a FocoConfiguration
func (t CancelRequestParams_Configuration) AsFocoConfiguration() (FocoConfiguration, error) {
	var body FocoConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFocoConfiguration overwrites any union data inside the CancelRequestParams_Configuration as the provided FocoConfiguration
func (t *CancelRequestParams_Configuration) FromFocoConfiguration(v FocoConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFocoConfiguration performs a merge with any union data inside the CancelRequestParams_Configuration, using the provided FocoConfiguration
func (t *CancelRequestParams_Configuration) MergeFocoConfiguration(v FocoConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

func (t CancelRequestParams_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CancelRequestParams_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
